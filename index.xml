<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Engineering @ Logic Soft</title>
    <link>https://devblog.logicsoft.co.in/</link>
    <description>Recent content on Engineering @ Logic Soft</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Logic Soft Pvt. Ltd.</copyright>
    <lastBuildDate>Thu, 05 Aug 2021 21:34:00 +0530</lastBuildDate><atom:link href="https://devblog.logicsoft.co.in/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://devblog.logicsoft.co.in/about/</link>
      <pubDate>Fri, 20 Aug 2021 10:00:00 +0530</pubDate>
      
      <guid>https://devblog.logicsoft.co.in/about/</guid>
      <description>When it comes to making software for the Book Trade (Publishing, Distribution and Retail), Logic Soft Pvt. Ltd. has stood the test of time. Operating since 1986, we have accumulated over 300 man-years of dedicated experience, and today, we probably understand the nuances of Book Trade as much as an experienced person from the trade does; if not better.
Having been around since the late &amp;rsquo;80s, we have got an opportunity to watch the trade grow into what it is.</description>
    </item>
    
    <item>
      <title>Quick access with SystemTrayMenu</title>
      <link>https://devblog.logicsoft.co.in/posts/quick-access-everything-with-systemtraymenu/</link>
      <pubDate>Thu, 05 Aug 2021 21:34:00 +0530</pubDate>
      
      <guid>https://devblog.logicsoft.co.in/posts/quick-access-everything-with-systemtraymenu/</guid>
      <description>Problem Being head of engineering at a firm means having to juggle a lot of context. And in this quest, I am always looking for ways to optimize my workflow. I can (greatly) simplify all of the work I do into these categories:
 Talking to folks &amp;ndash; Zoom  Usually via pre defined links - My personal link / Standup link / My founder&amp;rsquo;s personal link   My own work &amp;ndash; Visual Studio  Open a project in Visual Studio from my local directory of projects   Collaboration &amp;ndash; GitHub  Open a project in GitHub to log an issue / review a pull request    A tool that I already use quite extensively is Key Pirinha which is the Alfred/Spotlight/Launchy equivalent for windows and is blazing fast.</description>
    </item>
    
    <item>
      <title>Cookie logging in ASP Net Core</title>
      <link>https://devblog.logicsoft.co.in/posts/cookie-logging-in-aspnetcore/</link>
      <pubDate>Sun, 30 May 2021 10:00:00 +0530</pubDate>
      
      <guid>https://devblog.logicsoft.co.in/posts/cookie-logging-in-aspnetcore/</guid>
      <description>Sometime we have to do logging on Cookies for debugging in development site or in the production site. We had a situation like that,
In our big Web API that serves data to the android client. We used authentication for that client and server communication. authentication of app is based on uniquely generated Authentication token. It is happened automatically whenever the login required. One time we had an issue that is request from out client passes authentication for one request but failed for next request which is raised immediately after the first request to the same URI.</description>
    </item>
    
    <item>
      <title>scrcpy with autoadb</title>
      <link>https://devblog.logicsoft.co.in/posts/scrcpy-with-autoadb/</link>
      <pubDate>Tue, 05 May 2020 08:59:00 +0530</pubDate>
      
      <guid>https://devblog.logicsoft.co.in/posts/scrcpy-with-autoadb/</guid>
      <description>This post is mirrored with permission from Parthasarathy&amp;rsquo;s blog
Control android device over adb Required tools ADB
Android Debug Bridge (adb) is a versatile command-line tool that lets you communicate with a device. The adb command facilitates a variety of device actions, such as installing and debugging apps, and it provides access to a Unix shell that you can use to run a variety of commands on a device.
scrcpy</description>
    </item>
    
    <item>
      <title>NavController with Toolbar</title>
      <link>https://devblog.logicsoft.co.in/posts/navcontroller-with-toolbar/</link>
      <pubDate>Fri, 01 May 2020 10:00:00 +0530</pubDate>
      
      <guid>https://devblog.logicsoft.co.in/posts/navcontroller-with-toolbar/</guid>
      <description>This post is mirrored with permission from Parthasarathy&amp;rsquo;s blog
Navigation Component Android Jetpack&amp;rsquo;s Navigation component helps you implement navigation, from simple button clicks to more complex patterns, such as app bars and the navigation drawer. The Navigation component also ensures a consistent and predictable user experience by adhering to an established set of principles.
Documentation for toolbar To sync up the toolbar and navigation component, the official documentation suggests
val navController = findNavController(R.</description>
    </item>
    
    <item>
      <title>Generate a quick AWS dashboard using LINQPad</title>
      <link>https://devblog.logicsoft.co.in/posts/generate-a-quick-aws-dashboard-using-linqpad/</link>
      <pubDate>Mon, 31 Jul 2017 22:30:00 +0530</pubDate>
      
      <guid>https://devblog.logicsoft.co.in/posts/generate-a-quick-aws-dashboard-using-linqpad/</guid>
      <description>Context Logic Soft&amp;rsquo;s mainline product &amp;ndash; WINBDS is an on premise software i.e. we install it at the client location and we support them remotely.
Since a while now,this has been seeing a change. For small installations, usually an instance on the cloud works out cheaper and better. So we&amp;rsquo;ve begun suggesting people to move to AWS when the installation is small enough.
Turns out, if we&amp;rsquo;re diligent about turning the instances off when we don&amp;rsquo;t need them, a windows box on AWS is actually pretty affordable.</description>
    </item>
    
    <item>
      <title>Express solutions elegantly using your programming language</title>
      <link>https://devblog.logicsoft.co.in/posts/express-solutions-elegantly-using-your-prog-lang/</link>
      <pubDate>Sun, 16 Jul 2017 15:00:00 +0530</pubDate>
      
      <guid>https://devblog.logicsoft.co.in/posts/express-solutions-elegantly-using-your-prog-lang/</guid>
      <description>Introduction The post features a case study of a real life problem and the C# programming language. It explains how we went about trying to best express the solution within the bounds of the C# language.
Although we use the C# programming language here,the ideas shared in this post aren&amp;rsquo;t specific to it and can be applied to any high level language you are working with.
Problem Recently, for a customer requirement we had to work with a document that has both metadata and data.</description>
    </item>
    
    <item>
      <title>Hiccups with Hosting ASP .NET 5 apps on Linux (RC1)</title>
      <link>https://devblog.logicsoft.co.in/posts/aspnet5-hosting-hiccups-nginx-kestrel/</link>
      <pubDate>Fri, 11 Dec 2015 20:45:00 +0530</pubDate>
      
      <guid>https://devblog.logicsoft.co.in/posts/aspnet5-hosting-hiccups-nginx-kestrel/</guid>
      <description>Background After the recent dance with multiple Mono versions, the next step was to actually host the application.
Even though the app is largely still unfinished, I wanted to give it a shot on the staging instance to get a feel for things.
The general way to host apps on a Linux box is to have a NGINX reverse proxy in front, listening to different names on port 80 and to proxy the requests to internally running servers.</description>
    </item>
    
    <item>
      <title>ASP .NET 5, Npgsql, Linux &amp; Mono 4.2</title>
      <link>https://devblog.logicsoft.co.in/posts/asp-net-5-npgsql-linux-mono-4-2/</link>
      <pubDate>Wed, 09 Dec 2015 21:30:00 +0530</pubDate>
      
      <guid>https://devblog.logicsoft.co.in/posts/asp-net-5-npgsql-linux-mono-4-2/</guid>
      <description>Background Logic Soft&amp;rsquo;s primary application is a Windows based application written in C# using Windows.Forms. So when Microsoft announced ASP .NET 5 RC1, needless to say, we were quite excited.
We picked it up and started our experimentation - writing smaller applications and porting some of our side projects to the CoreCLR platform. As long as we didn&amp;rsquo;t go to the place that needed WIN32 APIs, it worked seamlessly.
With a small sum of experience, we took up the task of writing one of our internal dashboards with it.</description>
    </item>
    
    <item>
      <title>Dynamic prepared statements in Clojure</title>
      <link>https://devblog.logicsoft.co.in/posts/dynamic-prepared-statements-in-clojure/</link>
      <pubDate>Sun, 30 Aug 2015 10:51:00 +0530</pubDate>
      
      <guid>https://devblog.logicsoft.co.in/posts/dynamic-prepared-statements-in-clojure/</guid>
      <description>So just recently, at Logic Soft, we put our first (small) clojure project into production. It was a small library management system that was custom developed for one of our existing clients.
At Logic Soft, we are majorly a .NET house but we&amp;rsquo;re beginning to experiment with different platforms and technologies and felt that this was a small enough project to give clojure a shot (alongside other experiments we conducted with it).</description>
    </item>
    
  </channel>
</rss>
